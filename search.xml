<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>Markdown 语法介绍 Typora 编辑</title>
      <link href="/2019/02/23/markdown-yu-fa-jie-shao-typora-bian-ji/"/>
      <url>/2019/02/23/markdown-yu-fa-jie-shao-typora-bian-ji/</url>
      
        <content type="html"><![CDATA[<h1><span id="markdown-语法介绍-typora-编辑">Markdown 语法介绍 (Typora 编辑)</span></h1><blockquote><p>注：部分Markdown语法无法在博客中显示，但在编辑器中能正常显示<br>因显示原因，本文有删减，原文地址：<a href="https://blog.csdn.net/qq_43613189/article/details/87887737" target="_blank" rel="noopener">https://blog.csdn.net/qq_43613189/article/details/87887737</a></p></blockquote><p>[TOC]</p><blockquote><p>参考资料：</p><p><a href="https://ouweiya.gitbooks.io/markdown/index.html" target="_blank" rel="noopener">https://ouweiya.gitbooks.io/markdown/index.html</a></p><p><a href="https://www.jianshu.com/p/b03a8d7b1719" target="_blank" rel="noopener">https://www.jianshu.com/p/b03a8d7b1719</a></p><p><a href="https://segmentfault.com/markdown#articleHeader4" target="_blank" rel="noopener">https://segmentfault.com/markdown#articleHeader4</a></p><p><a href="https://wizardforcel.gitbooks.io/markdown-simple-world/0.html" target="_blank" rel="noopener">https://wizardforcel.gitbooks.io/markdown-simple-world/0.html</a></p><p><a href="https://coding.net/help/doc/project/markdown.html" target="_blank" rel="noopener">https://coding.net/help/doc/project/markdown.html</a></p><p><a href="https://guo365.github.io/study/Markdown.html" target="_blank" rel="noopener">https://guo365.github.io/study/Markdown.html</a></p><p><a href="https://yuedu.baidu.com/ebook/f2ec7e699a6648d7c1c708a1284ac850ad020418" target="_blank" rel="noopener">https://yuedu.baidu.com/ebook/f2ec7e699a6648d7c1c708a1284ac850ad020418</a></p></blockquote><h2><span id="标题">标题</span></h2><p>使用#表示一级标题，##表示二级标题，以此类推，有6个标题。<br>注：# 后面保持空格</p><h2><span id="目录列表-toc">目录列表 (TOC)</span></h2><p>输入[toc]然后回车，将会产生一个目录，这个目录抽取了文章的所有标题，自动更新内容。</p><h2><span id="引用">引用</span></h2><h3><span id="单行式">单行式</span></h3><p>使用 &gt; 来插入块引用。例如：</p><pre><code>&gt; hello world!</code></pre><p><strong>演示：</strong></p><blockquote><p>hello world!</p></blockquote><h3><span id="多行式">多行式</span></h3><pre><code>&gt; hello world!hello world!hello world!    </code></pre><p>或者</p><pre><code>&gt; hello world!&gt; hello world!&gt; hello world!</code></pre><p><strong>演示</strong></p><p>相同的结果</p><blockquote><p>hello world!<br>hello world!<br>hello world!</p></blockquote><h3><span id="多层嵌套">多层嵌套</span></h3><pre><code>&gt; aaaaaaaaa&gt; &gt; &gt; bbbbbbbbb&gt; &gt; &gt; &gt; &gt; cccccccccc&gt; &gt; &gt; &gt; &gt;&gt; &gt;&gt;&gt;</code></pre><p><strong>演示</strong></p><blockquote><p>aaaaaaaaa</p><blockquote><p>bbbbbbbbb</p><blockquote><p>cccccccccc</p></blockquote></blockquote></blockquote><h2><span id="语义标记">语义标记</span></h2><table><thead><tr><th>描述</th><th>效果</th><th>代码</th></tr></thead><tbody><tr><td>斜体</td><td><em>斜体</em></td><td><code>*斜体*</code></td></tr><tr><td>斜体</td><td>_斜体_</td><td><code>_斜体_</code></td></tr><tr><td>加粗</td><td><strong>加粗</strong></td><td><code>**加粗**</code></td></tr><tr><td>加粗+斜体</td><td><strong><em>加粗+斜体</em></strong></td><td><code>***加粗+斜体***</code></td></tr><tr><td>加粗+斜体</td><td><strong><em>加粗+斜体</em></strong></td><td><code>**_加粗+斜体_**</code></td></tr><tr><td>删除线</td><td><del>删除线</del></td><td><code>~~删除线~~</code></td></tr></tbody></table><h3><span id="斜体">斜体</span></h3><p>在标准的Markdown语法中，*和_包裹的内容会是斜体显示，但是GFM下划线一般用来分隔人名和代码变量名，因此我们推荐是用星号来包裹斜体内容。如果要显示星号，则使用转义：</p><pre><code>  \*</code></pre><h3><span id="加粗-强调">加粗 (强调)</span></h3><p>  使用两个*号或者两个_包裹的内容将会被加粗。例如</p><pre><code>  **使用两个*号加粗内容**  __使用两个下划线加粗内容__</code></pre><p>  将会输出</p><p>  <strong>使用两个*号加粗内容</strong><br>  <strong>使用两个下划线加粗内容</strong></p><p><em>Typroa 推荐使用两个\</em>号。*</p><h3><span id="删除线">删除线</span></h3><p>GFM添加了删除文本的语法，这是标准的Markdown语法木有的。使用<code>~~</code>包裹的文本将会具有删除的样式，例如<code>~删除文本~</code>将产生<del>删除文本</del>的样式。</p><h3><span id="转义">转义</span></h3><p>markdown支持在以下字符前面插入反斜杠</p><pre><code>\   反斜线`   反引号*   星号_   底线{}  花括号[]  方括号()  括弧#   井字号+   加号-   减号.   英文句点!   惊叹号</code></pre><p>插入之后，将不再解析这些字符，而是原样输出。</p><h3><span id="高亮">高亮</span></h3><p>高亮使用<code>==</code>包裹，例如：<code>==高亮==</code>将产生==高亮==</p><h2><span id="下标">下标</span></h2><p>下标使用<code>~</code>包裹，例如：<code>H~2~O</code>将产生H~2~O, 即水的分子式。</p><h3><span id="上标">上标</span></h3><p>上标使用<code>^</code>包裹，例如：<code>y^2^=4</code>将产生表达式y^2^ = 4</p><h3><span id="插入表情happy">插入表情:happy:</span></h3><p>使用<code>:happy:</code>输入表情:happy:,使用<code>:sad:</code>输入表情:sad:,使用<code>:cry:</code>输入表情:cry:等。以此类推！</p><h3><span id="下划线">下划线</span></h3><p>用HTML的语法<code>&lt;u&gt;Underline&lt;/u&gt;</code>将产生下划线<u>Underline</u>.</p><h3><span id="水平分割线">水平分割线</span></h3><p>使用<code>***</code>或者<code>---</code>，然后回车，来产生水平分割线。</p><hr><h3><span id="注释">注释</span></h3><p>我们可以对某一个词语进行注释。例如</p><pre><code>某些人用过了才知道[^注释][^注释]:Somebody that I used to know.</code></pre><p>将产生：</p><p>某些人用过了才知道[^注释]</p><p>[^注释]: Somebody that I used to know.</p><p><em>把鼠标放在<code>注释</code>上，将会有提示内容。</em></p><h2><span id="列表">列表</span></h2><p>注：序列<code>.</code>后 保持空格</p><h3><span id="无序列表">无序列表</span></h3><p>输入+, -, *创建无序的列表，使用任意数字开头，创建有序列表，例如：</p><pre><code>**无序的列表*** one* two* three</code></pre><p><strong>无序的列表</strong></p><ul><li>one</li><li>two</li><li>three</li></ul><h3><span id="有序列表">有序列表</span></h3><pre><code>**有序的列表**1. one2. two3. three</code></pre><p><strong>有序的列表</strong></p><ol><li>one</li><li>two</li><li>three</li></ol><h3><span id="序表嵌套">序表嵌套</span></h3><pre><code>1. one    1. one-1    2. two-22. two     * two-1    * two-2</code></pre><p><strong>演示</strong></p><ol><li>one <ol><li>one-1</li><li>two-2</li></ol></li><li>two <ul><li>two-1</li><li>two-2</li></ul></li></ol><h3><span id="层级列表">层级列表</span></h3><pre><code>* 总目录  * 一级目录    * 二级目录      * 三级目录</code></pre><p>说明：层级列表一般只支持三级列表，第一级实心圆点，第二级空心圆点，第三级以后都是实心方点。要实现层级列表，每下一级都要比上一级多输入2个空格或者一个Tab，而且第一级前面不要超过3个空格.</p><p><strong>演示</strong></p><ul><li>总目录<ul><li>一级目录<ul><li>二级目录<ul><li>三级目录</li></ul></li></ul></li></ul></li></ul><h3><span id="序表嵌套代码块">序表嵌套代码块</span></h3><p> 注：换行+两个Tab</p><pre><code>* one    var a = 10;     // 与上行保持空行并递进缩进</code></pre><p><strong>演示：</strong></p><ul><li><p>one</p><pre><code>  var a = 10;</code></pre></li></ul><h3><span id="任务列表">任务列表</span></h3><p>使用如下的代码创建任务列表，在[ ]中输入x表示完成，也可以通过点击选择完成或者没完成。</p><pre><code>- [ ] 吃饭- [ ] 逛街- [ ] 看电影</code></pre><ul><li style="list-style: none"><input type="checkbox" checked> 吃饭</li><li style="list-style: none"><input type="checkbox" checked> 逛街</li><li style="list-style: none"><input type="checkbox" checked> 看电影</li></ul><h2><span id="代码">代码</span></h2><h3><span id="行内标记">行内标记</span></h3><p>使用`包裹的内容将会以代码样式显示，例如</p><pre><code>使用`printf()`</code></pre><p>则会产生 <code>printf()</code> 样式。</p><h3><span id="代码块">代码块</span></h3><p><em>注：与上行距离一空行，根据不同的语言配置不同的代码着色</em></p><p>输入<code>~~~</code>或者~~~然后回车，可以输入代码块，并且可以选择代码的语言。</p><p>例如：</p><pre><code>  ~~~java  public Class HelloWorld{    System.out.println(&quot;Hello World!&quot;);  }  ~~~</code></pre><p>  将会产生</p><pre class=" language-java"><code class="language-java">  <span class="token keyword">public</span> Class <span class="token class-name">HelloWorld</span><span class="token punctuation">{</span>    System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"Hello World!"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token punctuation">}</span></code></pre><p>例如：</p><pre><code>  ~~~javascript  var num = 0;  for (var i = 0; i &lt; 5; i++) {      num+=i;  }  console.log(num);  ~~~</code></pre><p>演示</p><pre class=" language-javascript"><code class="language-javascript">  <span class="token keyword">var</span> num <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>  <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">var</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> <span class="token number">5</span><span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>      num<span class="token operator">+</span><span class="token operator">=</span>i<span class="token punctuation">;</span>  <span class="token punctuation">}</span>  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>num<span class="token punctuation">)</span><span class="token punctuation">;</span></code></pre><h2><span id="插入图片">插入图片</span></h2><p>  我们可以通过拖拉的方式，将本地文件夹中的图片或者网络上的图片插入。</p><p>  <img src="http://typora.io/img/drag-img.gif" alt="drag and drop image"></p><hr><hr><h2><span id="超链接">超链接</span></h2><p><strong>Markdown支持两种形式的链接语法：行内式和参考式，行内式一般用的比较多。</strong></p><h3><span id="行内式">行内式：</span></h3><p><strong>语法：</strong></p><pre><code>    [打开百度](https://www.baidu.com)    [打开百度](https://www.baidu.com &quot;打开百度&quot;)</code></pre><p>说明:[]里写链接文字，()里写链接地址, ()中的” “中可以为链接指定title属性，title属性可加可不加。title属性的效果是鼠标悬停在链接上会出现指定的 title文字。<code>[链接文字](链接地址 &quot;链接标题&quot;)</code>这样的形式。链接地址与链接标题前有一个空格。</p><p><strong>展示效果:</strong></p><p><a href="https://www.baidu.com/" target="_blank" rel="noopener">打开百度</a></p><p><a href="https://www.baidu.com" title="打开百度" target="_blank" rel="noopener">打开百度</a></p><h3><span id="参考式">参考式:</span></h3><p>参考式超链接一般用在学术论文上面，或者另一种情况，如果某一个链接在文章中多处使用，那么使用引用 的方式创建链接将非常好，它可以让你对链接进行统一的管理。</p><p><strong>语法:</strong></p><pre><code>  我经常浏览的几个网站[Google][1]、[Baidu][2]、[51CTO][3]和看视频的网站[爱奇艺][4]感觉都是很不错的网站。  [1]:http://www.google.com &quot;google&quot;  [2]:http://www.baidu.com &quot;Baidu&quot;  [3]:http://www.51cto.com &quot;51cto&quot;  [4]:http://www.aiqiyi.com &quot;aiqiyi&quot;</code></pre><p><strong>展示效果：</strong></p><p>我经常浏览的几个网站<a href="http://www.google.com/&quot;google&quot;" target="_blank" rel="noopener">Google</a>、<a href="http://www.baidu.com/&quot;Baidu&quot;" target="_blank" rel="noopener">Baidu</a>、<a href="http://www.51cto.com/&quot;51cto&quot;" target="_blank" rel="noopener">51CTO</a>和看视频的网站<a href="http://www.aiqiyi.com/&quot;aiqiyi&quot;" target="_blank" rel="noopener">爱奇艺</a>感觉都是很不错的网站。</p><h3><span id="自动连接">自动连接：</span></h3><p><strong>语法：</strong></p><pre><code>   &lt;https://www.baidu.com&gt;   &lt;xxx@outlook.com&gt;</code></pre><p>说明：Markdown 支持以比较简短的自动链接形式来处理网址和电子邮件信箱，只要是用&lt;&gt;包起来， Markdown 就会自动把它转成链接。一般网址的链接文字就和链接地址一样。</p><p><strong>展示效果：</strong></p><p><a href="https://www.baidu.com" target="_blank" rel="noopener">https://www.baidu.com</a></p><p><a href="mailto:&#x78;&#120;&#x78;&#64;&#x6f;&#x75;&#116;&#x6c;&#x6f;&#x6f;&#x6b;&#46;&#99;&#111;&#x6d;" target="_blank" rel="noopener">&#x78;&#120;&#x78;&#64;&#x6f;&#x75;&#116;&#x6c;&#x6f;&#x6f;&#x6b;&#46;&#99;&#111;&#x6d;</a></p><h3><span id="锚点">锚点</span></h3><p>网页中，锚点其实就是页内超链接，也就是链接本文档内部的某些元素，实现当前页面中的跳转。比如我这里写下一个锚点，点击回到目录，就能跳转到目录。 在目录中点击这一节，就能跳过来。还有下一节的注脚。这些根本上都是用锚点来实现的。</p><p>注意：Markdown Extra 只支持在标题后插入锚点，其它地方无效</p><h4><span id="页内超链接">页内超链接:</span></h4><p><strong>语法：</strong></p><pre><code>## 引用{#index}  跳转到[引用]{#index}</code></pre><h2><span id="表格">表格</span></h2><p>注：<code>:</code>代表对齐方式 ， <strong><code>:</code> 与<code>|</code> 之间不要有空格</strong></p><pre><code>|姓名|性别|毕业学校|工资||:---|:---:|:---:|---:||杨洋|男|重庆交通大学|3200||峰哥|男|贵州大学|5000||坑货|女|北京大学|2000|</code></pre><p>将产生:</p><table><thead><tr><th style="text-align:left">姓名</th><th style="text-align:center">性别</th><th style="text-align:center">毕业学校</th><th style="text-align:right">工资</th></tr></thead><tbody><tr><td style="text-align:left">杨洋</td><td style="text-align:center">男</td><td style="text-align:center">重庆交通大学</td><td style="text-align:right">3200</td></tr><tr><td style="text-align:left">峰哥</td><td style="text-align:center">男</td><td style="text-align:center">贵州大学</td><td style="text-align:right">5000</td></tr><tr><td style="text-align:left">坑货</td><td style="text-align:center">女</td><td style="text-align:center">北京大学</td><td style="text-align:right">2000</td></tr></tbody></table><p>其中代码的第二行指定对齐的方式，第一个是左对齐，第二个和第三个是居中，最后一个是右对齐。</p><h3><span id="特殊表格">特殊表格</span></h3><p>注：一般对合并单元格，以及其他特殊格式表格，markdown 是无能为力的<br>所以常规的做法是使用HTML标签，但是这样的编写效率极低。<br>但是有了这款工具的话，所有问题都迎刃而解。</p><p>在线生成HTML代码 <a href="http://www.tablesgenerator.com/" target="_blank" rel="noopener">Tables Generator</a> (国外的站)</p><p><img src="https:////upload-images.jianshu.io/upload_images/6912209-46aac2b114b995ec.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1000/format/webp" alt="img"></p><p>​                                                                    <u>Tables Generator</u></p><p><strong>演示</strong></p><p><img src="https:////upload-images.jianshu.io/upload_images/6912209-5e14abef7e65830d.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/409/format/webp" alt="img"></p><h2><span id="内嵌css样式">内嵌CSS样式</span></h2><p><strong>代码</strong></p><pre><code>&lt;p style=&quot;color: #AD5D0F;font-size: 30px; font-family: &#39;宋体&#39;;&quot;&gt;内联样式&lt;/p&gt;</code></pre><p><strong>演示</strong></p><p style="color: #AD5D0F;font-size: 30px; font-family: '宋体';">内联样式</p><h2><span id="数学公式">数学公式</span></h2><h3><span id="数学表达式">数学表达式</span></h3><p>要启用这个功能，首先到<code>Preference</code>-&gt;<code>Editor</code>中启用。然后使用<code>$</code>符号包裹Tex命令。</p><p>例如：</p><p><code>$lim_{x \to \infty} \ exp(-x)=0$</code>将产生如下的数学表达式：</p><p>$\lim_{x \to \infty} \exp(-x)=0$</p><p><code>$$ x \href{why-equal.html}{=} y^2 + 1 $$</code>将产生如下的数学表达式：</p><p>$$ x \href{why-equal.html}{=} y^2 + 1 ​$$</p><p><code>$ x = {-b \pm \sqrt{b^2-4ac} \over 2a}. $</code>将产生如下的数学表达式：</p><p>$ x = {-b \pm \sqrt{b^2-4ac} \over 2a}. ​$</p>]]></content>
      
      
      <categories>
          
          <category> 前端 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 前端 </tag>
            
            <tag> Markdown </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>hexo-theme-matery</title>
      <link href="/2019/02/17/hexo-theme-matery/"/>
      <url>/2019/02/17/hexo-theme-matery/</url>
      
        <content type="html"><![CDATA[<h1><span id="hexo-theme-matery">hexo-theme-matery</span></h1><p><a href="http://hits.dwyl.io/blinkfox/hexo-theme-matery" target="_blank" rel="noopener"><img src="http://hits.dwyl.io/blinkfox/hexo-theme-matery.svg" alt="HitCount"></a> <a href="https://gitter.im/hexo-theme-matery/Lobby?utm_source=badge" target="_blank" rel="noopener"><img src="https://img.shields.io/gitter/room/blinkfox/hexo-theme-matery.svg" alt="Gitter"></a> <a href="https://github.com/blinkfox/hexo-theme-matery/issues" target="_blank" rel="noopener"><img src="https://img.shields.io/github/issues/blinkfox/hexo-theme-matery.svg" alt="GitHub issues"></a> <a href="https://github.com/blinkfox/hexo-theme-matery/blob/master/LICENSE" target="_blank" rel="noopener"><img src="https://img.shields.io/github/license/blinkfox/hexo-theme-matery.svg" alt="GitHub license"></a> <a href="https://codeload.github.com/blinkfox/hexo-theme-matery/zip/master" target="_blank" rel="noopener"><img src="https://img.shields.io/badge/downloads-master-green.svg" alt="Download"></a> <a href="http://hexo.io" target="_blank" rel="noopener"><img src="https://img.shields.io/badge/hexo-%3E%3D%203.0-blue.svg" alt="Hexo Version"></a> <a href="https://github.com/blinkfox/hexo-theme-matery/network" target="_blank" rel="noopener"><img src="https://img.shields.io/github/forks/blinkfox/hexo-theme-matery.svg" alt="GitHub forks"></a> <a href="https://github.com/blinkfox/hexo-theme-matery/stargazers" target="_blank" rel="noopener"><img src="https://img.shields.io/github/stars/blinkfox/hexo-theme-matery.svg" alt="GitHub stars"></a></p><p><a href="README.md">English Document</a> | <a href="https://blinkfox.github.io/" target="_blank" rel="noopener">演示示例</a> | QQ 交流群: <code>926552981</code></p><blockquote><p>这是一个采用 <code>Material Design</code> 和响应式设计的 Hexo 博客主题。</p></blockquote><h2><span id="特性">特性</span></h2><ul><li>简单漂亮，文章内容美观易读</li><li><a href="https://material.io/" target="_blank" rel="noopener">Material Design</a> 设计</li><li>响应式设计，博客在桌面端、平板、手机等设备上均能很好的展现</li><li>每天动态切换 <code>Banner</code> 图片</li><li>瀑布流式的博客文章列表（文章无特色图片时会有 <code>24</code> 张漂亮的图片代替）</li><li>时间轴式的归档页</li><li><strong>词云</strong>的标签页和<strong>雷达图</strong>的分类页</li><li>丰富的关于我页面（包括关于我、文章统计图、我的项目、我的技能、相册等）</li><li>可自定义的数据的友情链接页面</li><li>支持文章置顶和文章打赏</li><li>支持 <code>MathJax</code></li><li><code>TOC</code> 目录</li><li>可设置复制文章内容时追加版权信息</li><li>可设置阅读文章时做密码验证</li><li><a href="https://gitalk.github.io/" target="_blank" rel="noopener">Gitalk</a>、<a href="https://imsun.github.io/gitment/" target="_blank" rel="noopener">Gitment</a>、<a href="https://valine.js.org/" target="_blank" rel="noopener">Valine</a> 和 <a href="https://disqus.com/" target="_blank" rel="noopener">Disqus</a> 评论模块（推荐使用 <code>Gitalk</code>）</li><li>集成了<a href="http://busuanzi.ibruce.info/" target="_blank" rel="noopener">不蒜子统计</a>、谷歌分析（<code>Google Analytics</code>）和文章字数统计等功能</li><li>支持在首页的音乐播放和视频播放功能</li></ul><h2><span id="下载">下载</span></h2><p>当你看到这里的时候，应该已经有一个自己的 <a href="https://hexo.io/zh-cn/" target="_blank" rel="noopener">Hexo</a> 博客了。如果还没有的话，不妨使用 Hexo 和 <a href="https://www.appinn.com/markdown/" target="_blank" rel="noopener">Markdown</a> 来写博客和文章。</p><p>点击 <a href="https://codeload.github.com/blinkfox/hexo-theme-matery/zip/master" target="_blank" rel="noopener">这里</a> 下载 <code>master</code> 分支的最新稳定版的代码，解压缩后，将 <code>hexo-theme-matery</code> 的文件夹复制到你 Hexo 的 <code>themes</code> 文件夹中即可。</p><p>当然你也可以在你的 <code>themes</code> 文件夹下使用 <code>Git clone</code> 命令来下载:</p><pre class=" language-bash"><code class="language-bash"><span class="token function">git</span> clone https://github.com/blinkfox/hexo-theme-matery.git</code></pre><h2><span id="配置">配置</span></h2><h3><span id="切换主题">切换主题</span></h3><p>修改 Hexo 根目录下的 <code>_config.yml</code> 的  <code>theme</code> 的值：<code>theme: hexo-theme-matery</code></p><h4><span id="_configyml-文件的其它修改建议"><code>_config.yml</code> 文件的其它修改建议:</span></h4><ul><li>请修改 <code>_config.yml</code> 的 <code>url</code> 的值为你的网站主 <code>URL</code>（如：<code>http://xxx.github.io</code>）。</li><li>建议修改两个 <code>per_page</code> 的分页条数值为 <code>6</code> 的倍数，如：<code>12</code>、<code>18</code> 等，这样文章列表在各个屏幕下都能较好的显示。</li><li>如果你是中文用户，则建议修改 <code>language</code> 的值为 <code>zh-CN</code>。</li></ul><h3><span id="新建分类-categories-页">新建分类 categories 页</span></h3><p><code>categories</code> 页是用来展示所有分类的页面，如果在你的博客 <code>source</code> 目录下还没有 <code>categories/index.md</code> 文件，那么你就需要新建一个，命令如下：</p><pre class=" language-bash"><code class="language-bash">hexo new page <span class="token string">"categories"</span></code></pre><p>编辑你刚刚新建的页面文件 <code>/source/categories/index.md</code>，至少需要以下内容：</p><pre class=" language-yaml"><code class="language-yaml"><span class="token punctuation">---</span><span class="token key atrule">title</span><span class="token punctuation">:</span> categories<span class="token key atrule">date</span><span class="token punctuation">:</span> <span class="token datetime number">2018-09-30 17:25:30</span><span class="token key atrule">type</span><span class="token punctuation">:</span> <span class="token string">"categories"</span><span class="token key atrule">layout</span><span class="token punctuation">:</span> <span class="token string">"categories"</span><span class="token punctuation">---</span></code></pre><h3><span id="新建标签-tags-页">新建标签 tags 页</span></h3><p><code>tags</code> 页是用来展示所有标签的页面，如果在你的博客 <code>source</code> 目录下还没有 <code>tags/index.md</code> 文件，那么你就需要新建一个，命令如下：</p><pre class=" language-bash"><code class="language-bash">hexo new page <span class="token string">"tags"</span></code></pre><p>编辑你刚刚新建的页面文件 <code>/source/tags/index.md</code>，至少需要以下内容：</p><pre class=" language-yaml"><code class="language-yaml"><span class="token punctuation">---</span><span class="token key atrule">title</span><span class="token punctuation">:</span> tags<span class="token key atrule">date</span><span class="token punctuation">:</span> <span class="token datetime number">2018-09-30 18:23:38</span><span class="token key atrule">type</span><span class="token punctuation">:</span> <span class="token string">"tags"</span><span class="token key atrule">layout</span><span class="token punctuation">:</span> <span class="token string">"tags"</span><span class="token punctuation">---</span></code></pre><h3><span id="新建关于我-about-页">新建关于我 about 页</span></h3><p><code>about</code> 页是用来展示<strong>关于我和我的博客</strong>信息的页面，如果在你的博客 <code>source</code> 目录下还没有 <code>about/index.md</code> 文件，那么你就需要新建一个，命令如下：</p><pre class=" language-bash"><code class="language-bash">hexo new page <span class="token string">"about"</span></code></pre><p>编辑你刚刚新建的页面文件 <code>/source/about/index.md</code>，至少需要以下内容：</p><pre class=" language-yaml"><code class="language-yaml"><span class="token punctuation">---</span><span class="token key atrule">title</span><span class="token punctuation">:</span> about<span class="token key atrule">date</span><span class="token punctuation">:</span> <span class="token datetime number">2018-09-30 17:25:30</span><span class="token key atrule">type</span><span class="token punctuation">:</span> <span class="token string">"about"</span><span class="token key atrule">layout</span><span class="token punctuation">:</span> <span class="token string">"about"</span><span class="token punctuation">---</span></code></pre><h3><span id="新建友情连接-friends-页可选的">新建友情连接 friends 页（可选的）</span></h3><p><code>friends</code> 页是用来展示<strong>友情连接</strong>信息的页面，如果在你的博客 <code>source</code> 目录下还没有 <code>friends/index.md</code> 文件，那么你就需要新建一个，命令如下：</p><pre class=" language-bash"><code class="language-bash">hexo new page <span class="token string">"friends"</span></code></pre><p>编辑你刚刚新建的页面文件 <code>/source/friends/index.md</code>，至少需要以下内容：</p><pre class=" language-yaml"><code class="language-yaml"><span class="token punctuation">---</span><span class="token key atrule">title</span><span class="token punctuation">:</span> friends<span class="token key atrule">date</span><span class="token punctuation">:</span> <span class="token datetime number">2018-12-12 21:25:30</span><span class="token key atrule">type</span><span class="token punctuation">:</span> <span class="token string">"friends"</span><span class="token key atrule">layout</span><span class="token punctuation">:</span> <span class="token string">"friends"</span><span class="token punctuation">---</span></code></pre><p>同时，在你的博客 <code>source</code> 目录下新建 <code>_data</code> 目录，在 <code>_data</code> 目录中新建 <code>friends.json</code> 文件，文件内容如下所示：</p><pre class=" language-json"><code class="language-json"><span class="token punctuation">[</span><span class="token punctuation">{</span>    <span class="token property">"avatar"</span><span class="token operator">:</span> <span class="token string">"http://image.luokangyuan.com/1_qq_27922023.jpg"</span><span class="token punctuation">,</span>    <span class="token property">"name"</span><span class="token operator">:</span> <span class="token string">"码酱"</span><span class="token punctuation">,</span>    <span class="token property">"introduction"</span><span class="token operator">:</span> <span class="token string">"我不是大佬，只是在追寻大佬的脚步"</span><span class="token punctuation">,</span>    <span class="token property">"url"</span><span class="token operator">:</span> <span class="token string">"http://luokangyuan.com/"</span><span class="token punctuation">,</span>    <span class="token property">"title"</span><span class="token operator">:</span> <span class="token string">"前去学习"</span><span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token punctuation">{</span>    <span class="token property">"avatar"</span><span class="token operator">:</span> <span class="token string">"http://image.luokangyuan.com/4027734.jpeg"</span><span class="token punctuation">,</span>    <span class="token property">"name"</span><span class="token operator">:</span> <span class="token string">"闪烁之狐"</span><span class="token punctuation">,</span>    <span class="token property">"introduction"</span><span class="token operator">:</span> <span class="token string">"编程界大佬，技术牛，人还特别好，不懂的都可以请教大佬"</span><span class="token punctuation">,</span>    <span class="token property">"url"</span><span class="token operator">:</span> <span class="token string">"https://blinkfox.github.io/"</span><span class="token punctuation">,</span>    <span class="token property">"title"</span><span class="token operator">:</span> <span class="token string">"前去学习"</span><span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token punctuation">{</span>    <span class="token property">"avatar"</span><span class="token operator">:</span> <span class="token string">"http://image.luokangyuan.com/avatar.jpg"</span><span class="token punctuation">,</span>    <span class="token property">"name"</span><span class="token operator">:</span> <span class="token string">"ja_rome"</span><span class="token punctuation">,</span>    <span class="token property">"introduction"</span><span class="token operator">:</span> <span class="token string">"平凡的脚步也可以走出伟大的行程"</span><span class="token punctuation">,</span>    <span class="token property">"url"</span><span class="token operator">:</span> <span class="token string">"ttps://me.csdn.net/jlh912008548"</span><span class="token punctuation">,</span>    <span class="token property">"title"</span><span class="token operator">:</span> <span class="token string">"前去学习"</span><span class="token punctuation">}</span><span class="token punctuation">]</span></code></pre><h3><span id="代码高亮">代码高亮</span></h3><p>由于 Hexo 自带的代码高亮主题显示不好看，所以主题中使用到了 <a href="https://github.com/ele828/hexo-prism-plugin" target="_blank" rel="noopener">hexo-prism-plugin</a> 的 Hexo 插件来做代码高亮，安装命令如下：</p><pre class=" language-bash"><code class="language-bash"><span class="token function">npm</span> i -S hexo-prism-plugin</code></pre><p>然后，修改 Hexo 根目录下 <code>_config.yml</code> 文件中 <code>highlight.enable</code> 的值为 <code>false</code>，并新增 <code>prism</code> 插件相关的配置，主要配置如下：</p><pre class=" language-yaml"><code class="language-yaml"><span class="token key atrule">highlight</span><span class="token punctuation">:</span>  <span class="token key atrule">enable</span><span class="token punctuation">:</span> <span class="token boolean important">false</span><span class="token key atrule">prism_plugin</span><span class="token punctuation">:</span>  <span class="token key atrule">mode</span><span class="token punctuation">:</span> <span class="token string">'preprocess'</span>    <span class="token comment" spellcheck="true"># realtime/preprocess</span>  <span class="token key atrule">theme</span><span class="token punctuation">:</span> <span class="token string">'tomorrow'</span>  <span class="token key atrule">line_number</span><span class="token punctuation">:</span> <span class="token boolean important">false    </span><span class="token comment" spellcheck="true"># default false</span>  <span class="token key atrule">custom_css</span><span class="token punctuation">:</span></code></pre><h3><span id="搜索">搜索</span></h3><p>本主题中还使用到了 <a href="https://github.com/wzpan/hexo-generator-search" target="_blank" rel="noopener">hexo-generator-search</a> 的 Hexo 插件来做内容搜索，安装命令如下：</p><pre class=" language-bash"><code class="language-bash"><span class="token function">npm</span> <span class="token function">install</span> hexo-generator-search --save</code></pre><p>在 Hexo 根目录下的 <code>_config.yml</code> 文件中，新增以下的配置项：</p><pre class=" language-yaml"><code class="language-yaml"><span class="token key atrule">search</span><span class="token punctuation">:</span>  <span class="token key atrule">path</span><span class="token punctuation">:</span> search.xml  <span class="token key atrule">field</span><span class="token punctuation">:</span> post</code></pre><h3><span id="中文链接转拼音可选的">中文链接转拼音（可选的）</span></h3><p>如果你的文章名称是中文的，那么 Hexo 默认生成的永久链接也会有中文，这样不利于 <code>SEO</code>，且 <code>gitment</code> 评论对中文链接也不支持。我们可以用 <a href="https://github.com/viko16/hexo-permalink-pinyin" target="_blank" rel="noopener">hexo-permalink-pinyin</a> Hexo 插件使在生成文章时生成中文拼音的永久链接。</p><p>安装命令如下：</p><pre class=" language-bash"><code class="language-bash"><span class="token function">npm</span> i hexo-permalink-pinyin --save</code></pre><p>在 Hexo 根目录下的 <code>_config.yml</code> 文件中，新增以下的配置项：</p><pre class=" language-yaml"><code class="language-yaml"><span class="token key atrule">permalink_pinyin</span><span class="token punctuation">:</span>  <span class="token key atrule">enable</span><span class="token punctuation">:</span> <span class="token boolean important">true</span>  <span class="token key atrule">separator</span><span class="token punctuation">:</span> <span class="token string">'-'</span> <span class="token comment" spellcheck="true"># default: '-'</span></code></pre><blockquote><p><strong>注</strong>：除了此插件外，<a href="https://github.com/rozbo/hexo-abbrlink" target="_blank" rel="noopener">hexo-abbrlink</a> 插件也可以生成非中文的链接。</p></blockquote><h3><span id="文章字数统计插件可选的">文章字数统计插件（可选的）</span></h3><p>如果你想要在文章中显示文章字数、阅读时长信息，可以安装 <a href="https://github.com/willin/hexo-wordcount" target="_blank" rel="noopener">hexo-wordcount</a>插件。</p><p>安装命令如下：</p><pre class=" language-bash"><code class="language-bash"><span class="token function">npm</span> i --save hexo-wordcount</code></pre><p>然后只需在本主题下的 <code>_config.yml</code> 文件中，激活以下配置项即可：</p><pre class=" language-yaml"><code class="language-yaml"><span class="token key atrule">wordCount</span><span class="token punctuation">:</span>  <span class="token key atrule">enable</span><span class="token punctuation">:</span> <span class="token boolean important">false </span><span class="token comment" spellcheck="true"># 将这个值设置为 true 即可.</span>  <span class="token key atrule">postWordCount</span><span class="token punctuation">:</span> <span class="token boolean important">true</span>  <span class="token key atrule">min2read</span><span class="token punctuation">:</span> <span class="token boolean important">true</span>  <span class="token key atrule">totalCount</span><span class="token punctuation">:</span> <span class="token boolean important">true</span></code></pre><h3><span id="添加-rss-订阅支持可选的">添加 RSS 订阅支持（可选的）</span></h3><p>本主题中还使用到了 <a href="https://github.com/hexojs/hexo-generator-feed" target="_blank" rel="noopener">hexo-generator-feed</a> 的 Hexo 插件来做 <code>RSS</code>，安装命令如下：</p><pre class=" language-bash"><code class="language-bash"><span class="token function">npm</span> <span class="token function">install</span> hexo-generator-feed --save</code></pre><p>在 Hexo 根目录下的 <code>_config.yml</code> 文件中，新增以下的配置项：</p><pre class=" language-yaml"><code class="language-yaml"><span class="token key atrule">feed</span><span class="token punctuation">:</span>  <span class="token key atrule">type</span><span class="token punctuation">:</span> atom  <span class="token key atrule">path</span><span class="token punctuation">:</span> atom.xml  <span class="token key atrule">limit</span><span class="token punctuation">:</span> <span class="token number">20</span>  <span class="token key atrule">hub</span><span class="token punctuation">:</span>  <span class="token key atrule">content</span><span class="token punctuation">:</span>  <span class="token key atrule">content_limit</span><span class="token punctuation">:</span> <span class="token number">140</span>  <span class="token key atrule">content_limit_delim</span><span class="token punctuation">:</span> <span class="token string">' '</span>  <span class="token key atrule">order_by</span><span class="token punctuation">:</span> <span class="token punctuation">-</span>date</code></pre><p>执行 <code>hexo clean &amp;&amp; hexo g</code> 重新生成博客文件，然后在 <code>public</code> 文件夹中即可看到 <code>atom.xml</code> 文件，说明你已经安装成功了。</p><h3><span id="修改页脚">修改页脚</span></h3><p>页脚信息可能需要做定制化修改，而且它不便于做成配置信息，所以可能需要你自己去再修改和加工。修改的地方在主题文件的 <code>/layout/_partial/footer.ejs</code> 文件中，包括站点、使用的主题、访问量等。</p><h3><span id="修改社交链接">修改社交链接</span></h3><p>在主题的 <code>_config.yml</code> 文件中，默认支持 <code>QQ</code>、<code>GitHub</code> 和邮箱的配置，你可以在主题文件的 <code>/layout/_partial/social-link.ejs</code> 文件中，新增、修改你需要的社交链接地址，增加链接可参考如下代码：</p><pre class=" language-html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>https://github.com/blinkfox<span class="token punctuation">"</span></span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>tooltipped<span class="token punctuation">"</span></span> <span class="token attr-name">target</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>_blank<span class="token punctuation">"</span></span> <span class="token attr-name">data-tooltip</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>访问我的GitHub<span class="token punctuation">"</span></span> <span class="token attr-name">data-position</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>top<span class="token punctuation">"</span></span> <span class="token attr-name">data-delay</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>50<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>i</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>fa fa-github<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>i</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">></span></span></code></pre><p>其中，社交图标（如：<code>fa-github</code>）你可以在 <a href="https://fontawesome.com/icons" target="_blank" rel="noopener">Font Awesome</a> 中搜索找到。以下是常用社交图标的标识，供你参考：</p><ul><li>Facebook: <code>fa-facebook</code></li><li>Twitter: <code>fa-twitter</code></li><li>Google-plus: <code>fa-google-plus</code></li><li>Linkedin: <code>fa-linkedin</code></li><li>Tumblr: <code>fa-tumblr</code></li><li>Medium: <code>fa-medium</code></li><li>Slack: <code>fa-slack</code></li><li>新浪微博: <code>fa-weibo</code></li><li>微信: <code>fa-wechat</code></li><li>QQ: <code>fa-qq</code></li></ul><blockquote><p><strong>注意</strong>: 本主题中使用的 <code>Font Awesome</code> 版本为 <code>4.7.0</code>。</p></blockquote><h3><span id="修改打赏的二维码图片">修改打赏的二维码图片</span></h3><p>在主题文件的 <code>source/medias/reward</code> 文件中，你可以替换成你的的微信和支付宝的打赏二维码图片。</p><h3><span id="配置音乐播放器可选的">配置音乐播放器（可选的）</span></h3><p>要支持音乐播放，就必须开启音乐的播放配置和音乐数据的文件。</p><p>首先，在你的博客 <code>source</code> 目录下的 <code>_data</code> 目录（没有的话就新建一个）中新建 <code>musics.json</code> 文件，文件内容如下所示：</p><pre class=" language-json"><code class="language-json"><span class="token punctuation">[</span><span class="token punctuation">{</span>    <span class="token property">"name"</span><span class="token operator">:</span> <span class="token string">"五月雨变奏电音"</span><span class="token punctuation">,</span>    <span class="token property">"artist"</span><span class="token operator">:</span> <span class="token string">"AnimeVibe"</span><span class="token punctuation">,</span>    <span class="token property">"url"</span><span class="token operator">:</span> <span class="token string">"http://xxx.com/music1.mp3"</span><span class="token punctuation">,</span>    <span class="token property">"cover"</span><span class="token operator">:</span> <span class="token string">"http://xxx.com/music-cover1.png"</span><span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token punctuation">{</span>    <span class="token property">"name"</span><span class="token operator">:</span> <span class="token string">"Take me hand"</span><span class="token punctuation">,</span>    <span class="token property">"artist"</span><span class="token operator">:</span> <span class="token string">"DAISHI DANCE,Cecile Corbel"</span><span class="token punctuation">,</span>    <span class="token property">"url"</span><span class="token operator">:</span> <span class="token string">"/medias/music/music2.mp3"</span><span class="token punctuation">,</span>    <span class="token property">"cover"</span><span class="token operator">:</span> <span class="token string">"/medias/music/cover2.png"</span><span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token punctuation">{</span>    <span class="token property">"name"</span><span class="token operator">:</span> <span class="token string">"Shape of You"</span><span class="token punctuation">,</span>    <span class="token property">"artist"</span><span class="token operator">:</span> <span class="token string">"J.Fla"</span><span class="token punctuation">,</span>    <span class="token property">"url"</span><span class="token operator">:</span> <span class="token string">"http://xxx.com/music3.mp3"</span><span class="token punctuation">,</span>    <span class="token property">"cover"</span><span class="token operator">:</span> <span class="token string">"http://xxx.com/music-cover3.png"</span><span class="token punctuation">}</span><span class="token punctuation">]</span></code></pre><blockquote><p><strong>注</strong>：以上 JSON 中的属性：<code>name</code>、<code>artist</code>、<code>url</code>、<code>cover</code> 分别表示音乐的名称、作者、音乐文件地址、音乐封面。</p></blockquote><p>然后，在主题的 <code>_config.yml</code> 配置文件中激活配置即可：</p><pre class=" language-yaml"><code class="language-yaml"><span class="token comment" spellcheck="true"># 是否在首页显示音乐.</span><span class="token key atrule">music</span><span class="token punctuation">:</span>  <span class="token key atrule">enable</span><span class="token punctuation">:</span> <span class="token boolean important">true</span>  <span class="token key atrule">showTitle</span><span class="token punctuation">:</span> <span class="token boolean important">false</span>  <span class="token key atrule">title</span><span class="token punctuation">:</span> 听听音乐  <span class="token key atrule">fixed</span><span class="token punctuation">:</span> <span class="token boolean important">false </span><span class="token comment" spellcheck="true"># 是否开启吸底模式</span>  <span class="token key atrule">autoplay</span><span class="token punctuation">:</span> <span class="token boolean important">false </span><span class="token comment" spellcheck="true"># 是否自动播放</span>  <span class="token key atrule">theme</span><span class="token punctuation">:</span> '<span class="token comment" spellcheck="true">#42b983'</span>  <span class="token key atrule">loop</span><span class="token punctuation">:</span> <span class="token string">'all'</span> <span class="token comment" spellcheck="true"># 音频循环播放, 可选值: 'all', 'one', 'none'</span>  <span class="token key atrule">order</span><span class="token punctuation">:</span> <span class="token string">'list'</span> <span class="token comment" spellcheck="true"># 音频循环顺序, 可选值: 'list', 'random'</span>  <span class="token key atrule">preload</span><span class="token punctuation">:</span> <span class="token string">'auto'</span> <span class="token comment" spellcheck="true"># 预加载，可选值: 'none', 'metadata', 'auto'</span>  <span class="token key atrule">volume</span><span class="token punctuation">:</span> <span class="token number">0.7 </span><span class="token comment" spellcheck="true"># 默认音量，请注意播放器会记忆用户设置，用户手动设置音量后默认音量即失效</span>  <span class="token key atrule">listFolded</span><span class="token punctuation">:</span> <span class="token boolean important">false </span><span class="token comment" spellcheck="true"># 列表默认折叠</span>  <span class="token key atrule">listMaxHeight</span><span class="token punctuation">:</span> <span class="token comment" spellcheck="true"># 列表最大高度</span></code></pre><h2><span id="文章-front-matter-示例">文章 Front-matter 示例</span></h2><p>以下为文章 <code>Front-matter</code> 的示例和说明，所有内容均为<strong>非必填</strong>的。但我仍然建议至少填写 <code>title</code> 和 <code>date</code> 的值。</p><pre class=" language-yaml"><code class="language-yaml"><span class="token punctuation">---</span><span class="token key atrule">title</span><span class="token punctuation">:</span> typora<span class="token punctuation">-</span>vue<span class="token punctuation">-</span>theme主题介绍<span class="token key atrule">date</span><span class="token punctuation">:</span> <span class="token datetime number">2018-09-07 09:25:00</span><span class="token key atrule">author</span><span class="token punctuation">:</span> 赵奇 <span class="token comment" spellcheck="true"># 图片推荐使用图床(腾讯云、七牛云、又拍云等)来做图片的路径.如:http://xxx.com/xxx.jpg</span><span class="token key atrule">img</span><span class="token punctuation">:</span> /source/images/xxx.jpg<span class="token comment" spellcheck="true"># 如果top值为true，则会是首页推荐文章</span><span class="token key atrule">top</span><span class="token punctuation">:</span> <span class="token boolean important">true</span><span class="token comment" spellcheck="true"># 如果要对文章设置阅读验证密码的话，就可以在设置password的值，该值必须是用SHA256加密后的密码，防止被他人识破</span><span class="token key atrule">password</span><span class="token punctuation">:</span> 8d969eef6ecad3c29a3a629280e686cf0c3f5d5a86aff3ca12020c923adc6c92<span class="token comment" spellcheck="true"># 本文章是否开启mathjax，且需要在主题的_config.yml文件中也需要开启才行</span><span class="token key atrule">mathjax</span><span class="token punctuation">:</span> <span class="token boolean important">false</span><span class="token key atrule">summary</span><span class="token punctuation">:</span> 这是你自定义的文章摘要内容，如果这个属性有值，文章卡片摘要就显示这段文字，否则程序会自动截取文章的部分内容作为摘要<span class="token key atrule">categories</span><span class="token punctuation">:</span> Markdown<span class="token key atrule">tags</span><span class="token punctuation">:</span>  <span class="token punctuation">-</span> Typora  <span class="token punctuation">-</span> Markdown<span class="token punctuation">---</span></code></pre><blockquote><p><strong>注意</strong>:</p><ol><li>如果 <code>img</code> 属性不填写的话，文章特色图会根据文章标题的 <code>hashcode</code> 的值取余，然后选取主题中对应的特色图片，从而达到让所有文章都的特色图<strong>各有特色</strong>。</li><li><code>date</code> 的值尽量保证每篇文章是唯一的，因为本主题中 <code>Gitalk</code> 和 <code>Gitment</code> 识别 <code>id</code> 是通过 <code>date</code> 的值来作为唯一标识的。</li><li>如果要对文章设置阅读验证密码的功能，不仅要在 Front-matter 中设置采用了 SHA256 加密的 password 的值，还需要在主题的 <code>_config.yml</code> 中激活了配置。有些在线的 SHA256 加密的地址，可供你使用：<a href="http://tool.oschina.net/encrypt?type=2" target="_blank" rel="noopener">开源中国在线工具</a>、<a href="http://encode.chahuo.com/" target="_blank" rel="noopener">chahuo</a>、<a href="http://tool.chinaz.com/tools/hash.aspx" target="_blank" rel="noopener">站长工具</a>。</li></ol></blockquote><h2><span id="效果截图">效果截图</span></h2><p><img src="http://static.blinkfox.com/matery-20181202-1.png" alt="首页"></p><p><img src="http://static.blinkfox.com/matery-20181202-2.png" alt="首页推荐文章"></p><p><img src="http://static.blinkfox.com/matery-20181202-3.png" alt="首页文章列表"></p><p><img src="http://static.blinkfox.com/matery-20181202-7.png" alt="首页文章列表"></p><p><img src="http://static.blinkfox.com/matery-20181202-8.png" alt="首页文章列表"></p><h2><span id="自定制修改">自定制修改</span></h2><p>在本主题的 <code>_config.yml</code> 中可以修改部分自定义信息，有以下几个部分：</p><ul><li>菜单</li><li>我的梦想</li><li>首页的音乐播放器和视频播放器配置</li><li>是否显示推荐文章名称和按钮配置</li><li><code>favicon</code> 和 <code>Logo</code></li><li>个人信息</li><li>TOC 目录</li><li>文章打赏信息</li><li>复制文章内容时追加版权信息</li><li>MathJax</li><li>文章字数统计、阅读时长</li><li>点击页面的’爱心’效果</li><li>我的项目</li><li>我的技能</li><li>我的相册</li><li><code>Gitalk</code>、<code>Gitment</code>、<code>Valine</code> 和 <code>disqus</code> 评论配置</li><li><a href="http://busuanzi.ibruce.info/" target="_blank" rel="noopener">不蒜子统计</a>和谷歌分析（<code>Google Analytics</code>）</li><li>默认特色图的集合。当文章没有设置特色图时，本主题会根据文章标题的 <code>hashcode</code> 值取余，来选择展示对应的特色图</li></ul><p><strong>我认为个人博客应该都有自己的风格和特色</strong>。如果本主题中的诸多功能和主题色彩你不满意，可以在主题中自定义修改，很多更自由的功能和细节点的修改难以在主题的 <code>_config.yml</code> 中完成，需要修改源代码才来完成。以下列出了可能对你有用的地方：</p><h3><span id="修改主题颜色">修改主题颜色</span></h3><p>在主题文件的 <code>/source/css/matery.css</code> 文件中，搜索 <code>.bg-color</code> 来修改背景颜色：</p><pre class=" language-css"><code class="language-css"><span class="token comment" spellcheck="true">/* 整体背景颜色，包括导航、移动端的导航、页尾、标签页等的背景颜色. */</span><span class="token selector"><span class="token class">.bg-color</span> </span><span class="token punctuation">{</span>    <span class="token property">background-image</span><span class="token punctuation">:</span> <span class="token function">linear-gradient</span><span class="token punctuation">(</span>to right, <span class="token hexcode">#4cbf30</span> <span class="token number">0%</span>, <span class="token hexcode">#0f9d58</span> <span class="token number">100%</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token comment" spellcheck="true">/* 和背景颜色相同的文字颜色，目前仅在首页一个地方使用到，你也可以将此样式应用到其他地方. */</span><span class="token selector"><span class="token class">.text-color</span> </span><span class="token punctuation">{</span>    <span class="token property">color</span><span class="token punctuation">:</span> <span class="token hexcode">#0f9d58</span> <span class="token important">!important</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token atrule"><span class="token rule">@-webkit-keyframes</span> rainbow</span> <span class="token punctuation">{</span>   <span class="token comment" spellcheck="true">/* 动态切换背景颜色. */</span><span class="token punctuation">}</span><span class="token atrule"><span class="token rule">@keyframes</span> rainbow</span> <span class="token punctuation">{</span>    <span class="token comment" spellcheck="true">/* 动态切换背景颜色. */</span><span class="token punctuation">}</span></code></pre><h3><span id="修改-banner-图和文章特色图">修改 banner 图和文章特色图</span></h3><p>你可以直接在 <code>/source/medias/banner</code> 文件夹中更换你喜欢的 <code>banner</code> 图片，主题代码中是每天动态切换一张，只需 <code>7</code> 张即可。如果你会 <code>JavaScript</code> 代码，可以修改成你自己喜欢切换逻辑，如：随机切换等，<code>banner</code> 切换的代码位置在 <code>/layout/_partial/bg-cover.ejs</code> 文件的 <code>&lt;script&gt;&lt;/script&gt;</code> 代码中：</p><pre class=" language-javascript"><code class="language-javascript"><span class="token function">$</span><span class="token punctuation">(</span><span class="token string">'.bg-cover'</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">css</span><span class="token punctuation">(</span><span class="token string">'background-image'</span><span class="token punctuation">,</span> <span class="token string">'url(/medias/banner/'</span> <span class="token operator">+</span> <span class="token keyword">new</span> <span class="token class-name">Date</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getDay</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token string">'.jpg)'</span><span class="token punctuation">)</span><span class="token punctuation">;</span></code></pre><p>在 <code>/source/medias/featureimages</code> 文件夹中默认有 24 张特色图片，你可以再增加或者减少，并需要在 <code>_config.yml</code> 做同步修改。</p>]]></content>
      
      
      
        <tags>
            
            <tag> 前端 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Hello World</title>
      <link href="/2019/02/17/hello-world/"/>
      <url>/2019/02/17/hello-world/</url>
      
        <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/" target="_blank" rel="noopener">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/" target="_blank" rel="noopener">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html" target="_blank" rel="noopener">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues" target="_blank" rel="noopener">GitHub</a>.</p><h2><span id="quick-start">Quick Start</span></h2><h3><span id="create-a-new-post">Create a new post</span></h3><pre class=" language-bash"><code class="language-bash">$ hexo new <span class="token string">"My New Post"</span></code></pre><p>More info: <a href="https://hexo.io/docs/writing.html" target="_blank" rel="noopener">Writing</a></p><h3><span id="run-server">Run server</span></h3><pre class=" language-bash"><code class="language-bash">$ hexo server</code></pre><p>More info: <a href="https://hexo.io/docs/server.html" target="_blank" rel="noopener">Server</a></p><h3><span id="generate-static-files">Generate static files</span></h3><pre class=" language-bash"><code class="language-bash">$ hexo generate</code></pre><p>More info: <a href="https://hexo.io/docs/generating.html" target="_blank" rel="noopener">Generating</a></p><h3><span id="deploy-to-remote-sites">Deploy to remote sites</span></h3><pre class=" language-bash"><code class="language-bash">$ hexo deploy</code></pre><p>More info: <a href="https://hexo.io/docs/deployment.html" target="_blank" rel="noopener">Deployment</a></p>]]></content>
      
      
      
        <tags>
            
            <tag> 前端 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Typora For Markdown 语法</title>
      <link href="/2019/02/16/typora-for-markdown-yu-fa/"/>
      <url>/2019/02/16/typora-for-markdown-yu-fa/</url>
      
        <content type="html"><![CDATA[<p>#Typora For Markdown 语法</p><p>[TOC]</p><p>###数学表达式</p><p>要启用这个功能，首先到<code>Preference</code>-&gt;<code>Editor</code>中启用。然后使用<code>$</code>符号包裹Tex命令，例如：<code>$lim_{x \to \infty} \ exp(-x)=0$</code>将产生如下的数学表达式：</p><p>$\lim_{x \to \infty} \exp(-x)=0$</p><p>###下标</p><p>下标使用<code>~</code>包裹，例如：<code>H~2~O</code>将产生H~2~O, 即水的分子式。</p><p>###上标</p><p>上标使用<code>^</code>包裹，例如：<code>y^2^=4</code>将产生表达式y^2^ = 4</p><p>###插入表情:happy:</p><p>使用<code>:happy:</code>输入表情:happy:,使用<code>:sad:</code>输入表情:sad:,使用<code>:cry:</code>输入表情:cry:等。以此类推！</p><h3><span id="下划线">下划线</span></h3><p>用HTML的语法<code>&lt;u&gt;Underline&lt;/u&gt;</code>将产生下划线<u>Underline</u>.</p><h3><span id="删除线">删除线</span></h3><p>GFM添加了删除文本的语法，这是标准的Markdown语法木有的。使用<code>~~</code>包裹的文本将会具有删除的样式，例如<code>~删除文本~</code>将产生<del>删除文本</del>的样式。</p><h3><span id="代码">代码</span></h3><ul><li>使用`包裹的内容将会以代码样式显示，例如</li></ul><pre><code>使用`printf()`</code></pre><p>则会产生<code>printf()</code>样式。</p><ul><li><p>输入<code>~~~</code>或者<code>`</code>然后回车，可以输入代码块，并且可以选择代码的语言。例如：</p></li><li><pre><code>```javapublic Class HelloWorld{  System.out.println(&quot;Hello World!&quot;);}```</code></pre><p>将会产生</p><pre class=" language-java"><code class="language-java"><span class="token keyword">public</span> Class <span class="token class-name">HelloWorld</span><span class="token punctuation">{</span>  System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"Hello World!"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span></code></pre><h3><span id="强调">强调</span></h3><p>使用两个*号或者两个_包裹的内容将会被强调。例如</p><pre><code>**使用两个*号强调内容**__使用两个下划线强调内容__</code></pre><p>将会输出</p><p><strong>使用两个*号强调内容</strong><br><strong>使用两个下划线强调内容</strong><br>Typroa 推荐使用两个*号。</p><h3><span id="斜体">斜体</span></h3><p>在标准的Markdown语法中，*和_包裹的内容会是斜体显示，但是GFM下划线一般用来分隔人名和代码变量名，因此我们推荐是用星号来包裹斜体内容。如果要显示星号，则使用转义：</p><pre><code>\*</code></pre><h3><span id="插入图片">插入图片</span></h3><p>我们可以通过拖拉的方式，将本地文件夹中的图片或者网络上的图片插入。</p><p><img src="http://typora.io/img/drag-img.gif" alt="drag and drop image"></p><p>​</p><p>​</p></li></ul><h3><span id="插入url连接">插入URL连接</span></h3><p>使用尖括号包裹的url将产生一个连接，例如：<code>&lt;www.baidu.com&gt;</code>将产生连接:&lt;<a href="http://www.baidu.com&gt;" target="_blank" rel="noopener">www.baidu.com&gt;</a>.</p><p>如果是标准的url，则会自动产生连接，例如:<a href="http://www.google.com" target="_blank" rel="noopener">www.google.com</a></p><h3><span id="目录列表table-of-contentstoc">目录列表Table of Contents（TOC）</span></h3><p>输入[toc]然后回车，将会产生一个目录，这个目录抽取了文章的所有标题，自动更新内容。</p><h3><span id="水平分割线">水平分割线</span></h3><p>使用<code>***</code>或者<code>---</code>，然后回车，来产生水平分割线。</p><hr><h3><span id="标注">标注</span></h3><p>我们可以对某一个词语进行标注。例如</p><pre><code>某些人用过了才知道[^注释][^注释]:Somebody that I used to know.</code></pre><p>将产生：</p><p>某些人用过了才知道[^注释]<br>[^注释]: Somebody that I used to know.</p><p>把鼠标放在<code>注释</code>上，将会有提示内容。</p><h3><span id="表格">表格</span></h3><pre><code>|姓名|性别|毕业学校|工资||:---|:---:|:---:|---:||杨洋|男|重庆交通大学|3200||峰哥|男|贵州大学|5000||坑货|女|北京大学|2000|</code></pre><p>将产生:</p><table><thead><tr><th style="text-align:left">姓名</th><th style="text-align:center">性别</th><th style="text-align:center">毕业学校</th><th style="text-align:right">工资</th></tr></thead><tbody><tr><td style="text-align:left">杨洋</td><td style="text-align:center">男</td><td style="text-align:center">重庆交通大学</td><td style="text-align:right">3200</td></tr><tr><td style="text-align:left">峰哥</td><td style="text-align:center">男</td><td style="text-align:center">贵州大学</td><td style="text-align:right">5000</td></tr><tr><td style="text-align:left">坑货</td><td style="text-align:center">女</td><td style="text-align:center">北京大学</td><td style="text-align:right">2000</td></tr></tbody></table><p>其中代码的第二行指定对齐的方式，第一个是左对齐，第二个和第三个是居中，最后一个是右对齐。</p><h3><span id="数学表达式块">数学表达式块</span></h3><p>输入两个美元符号，然后回车，就可以输入数学表达式块了。例如：</p><pre><code> $$\mathbf{V}_1 \times \mathbf{V}_2 =  \begin{vmatrix} \mathbf{i} &amp; \mathbf{j} &amp; \mathbf{k} \\\frac{\partial X}{\partial u} &amp;  \frac{\partial Y}{\partial u} &amp; 0 \\\frac{\partial X}{\partial v} &amp;  \frac{\partial Y}{\partial v} &amp; 0 \\\end{vmatrix}$$</code></pre><p>将会产生:</p><p> $$\mathbf{V}_1 \times \mathbf{V}_2 =  \begin{vmatrix} \mathbf{i} &amp; \mathbf{j} &amp; \mathbf{k} \\frac{\partial X}{\partial u} &amp;  \frac{\partial Y}{\partial u} &amp; 0 \\frac{\partial X}{\partial v} &amp;  \frac{\partial Y}{\partial v} &amp; 0 \\end{vmatrix}​$$</p><p> $$f(x) = a_1x^n + a_2x^{n-1} + a_3x^{n-2}$$</p><h3><span id="任务列表">任务列表</span></h3><p>使用如下的代码创建任务列表，在[]中输入x表示完成，也可以通过点击选择完成或者没完成。</p><pre><code>- [ ] 吃饭- [ ] 逛街- [ ] 看电影</code></pre><ul><li style="list-style: none"><input type="checkbox" checked> 吃饭</li><li style="list-style: none"><input type="checkbox" checked> 逛街​</li><li style="list-style: none"><input type="checkbox" checked> 看电影</li></ul><h3><span id="列表">列表</span></h3><p>输入+, -, *,创建无序的列表，使用任意数字开头，创建有序列表，例如：</p><pre><code>**无序的列表*** tfboys* 杨洋* 我爱你</code></pre><p><strong>无序的列表</strong></p><ul><li>tfboys</li><li>杨洋</li><li>我爱你</li></ul><pre><code>**有序的列表**1. 苹果6. 香蕉10. 我都不喜欢</code></pre><p><strong>有序的列表</strong></p><ol><li>苹果</li><li>香蕉</li><li>我都不喜欢</li></ol><h3><span id="块引用">块引用</span></h3><p>使用&gt;来插入块引用。例如：</p><pre><code>&gt;这是一个块引用！</code></pre><p>将产生：</p><blockquote><p>这是一个块引用！</p></blockquote><h3><span id="标题">标题</span></h3><p>使用#表示一级标题，##表示二级标题，以此类推，有6个标题。</p>]]></content>
      
      
      
        <tags>
            
            <tag> 前端 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>text</title>
      <link href="/2019/02/16/text/"/>
      <url>/2019/02/16/text/</url>
      
        <content type="html"><![CDATA[<script src="//cdn.bootcss.com/jquery/1.11.3/jquery.min.js"></script><div id="hbe-security">  <div class="hbe-input-container">  <input type="password" class="hbe-form-control" id="pass" placeholder="Welcome to my blog, enter password to read.">    <label for="pass">Welcome to my blog, enter password to read.</label>    <div class="bottom-line"></div>  </div></div><div id="decryptionError" style="display: none;">Incorrect Password!</div><div id="noContentError" style="display: none;">No content to display!</div><div id="encrypt-blog" style="display:none">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</div><script src="/lib/crypto-js.js"></script><script src="/lib/blog-encrypt.js"></script><link href="/css/blog-encrypt.css" rel="stylesheet" type="text/css">]]></content>
      
      
      
        <tags>
            
            <tag> wechat </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
